{"ast":null,"code":"var _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Posts.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { v4 as uuid } from \"uuid\";\nimport Post from \"./Post/Post\";\nimport { ALL_POSTS } from \"../../queries/post.query\";\n\nconst Posts = () => {\n  const result = useQuery(ALL_POSTS, {\n    refetchQueries: {\n      query: A\n    }\n  });\n  if (result.loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 29\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }, \"Posts\"), result.data.allPosts.map(post => {\n    __jsx(Post, {\n      key: uuid(),\n      firstName: post.firstName,\n      lastName: post.lastName,\n      date: post.date,\n      content: post.content,\n      likes: post.likes,\n      comments: post.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    });\n\n    {\n      post.firstName;\n    }\n  }));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Posts.tsx"],"names":["React","useQuery","v4","uuid","Post","ALL_POSTS","Posts","result","refetchQueries","query","A","loading","data","allPosts","map","post","firstName","lastName","date","content","likes","comments"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,IAAP,MAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAmB;AAChC,QAAMC,MAAM,GAAGN,QAAQ,CAACI,SAAD,EAAa;AAAEG,IAAAA,cAAc,EAAE;AAAEC,MAAAA,KAAK,EAAEC;AAAT;AAAlB,GAAb,CAAvB;AACA,MAAIH,MAAM,CAACI,OAAX,EAAoB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEpB,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEEJ,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,GAArB,CAA0BC,IAAD,IAAiB;AAC1C,UAAC,IAAD;AACC,MAAA,GAAG,EAAEZ,IAAI,EADV;AAEC,MAAA,SAAS,EAAEY,IAAI,CAACC,SAFjB;AAGC,MAAA,QAAQ,EAAED,IAAI,CAACE,QAHhB;AAIC,MAAA,IAAI,EAAEF,IAAI,CAACG,IAJZ;AAKC,MAAA,OAAO,EAAEH,IAAI,CAACI,OALf;AAMC,MAAA,KAAK,EAAEJ,IAAI,CAACK,KANb;AAOC,MAAA,QAAQ,EAAEL,IAAI,CAACM,QAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA;AACCN,MAAAA,IAAI,CAACC,SAAL;AACA;AACD,GAbA,CAFF,CADD;AAmBA,CAvBD;;AAyBA,eAAeV,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { v4 as uuid } from \"uuid\";\nimport Post, { IPost } from \"./Post/Post\";\nimport { ALL_POSTS } from \"../../queries/post.query\";\n\nconst Posts = (): JSX.Element => {\n\tconst result = useQuery(ALL_POSTS,  { refetchQueries: { query: A }});\n\tif (result.loading) return <div>Loading...</div>;\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Posts</h1>\n\t\t\t{result.data.allPosts.map((post: IPost) => {\n\t\t\t\t<Post\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\tfirstName={post.firstName}\n\t\t\t\t\tlastName={post.lastName}\n\t\t\t\t\tdate={post.date}\n\t\t\t\t\tcontent={post.content}\n\t\t\t\t\tlikes={post.likes}\n\t\t\t\t\tcomments={post.comments}\n\t\t\t\t/>;\n\t\t\t\t{\n\t\t\t\t\tpost.firstName;\n\t\t\t\t}\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}