{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"../styles/globals.css\";\nimport React from \"react\";\nimport { ApolloClient, HttpLink, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { setContext } from \"apollo-link-context\";\nimport { Provider } from \"react-redux\";\nimport { useStore } from \"../store\"; // import { WebSocketLink } from \"@apollo/link-ws\";\n\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var token = localStorage.getItem(\"user\");\n  return {\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\n      authorization: token && \"bearer \".concat(token)\n    })\n  };\n});\nvar httpLink = new HttpLink({\n  uri: \"http://localhost:4000/graphql\"\n}); // const wsLink = new WebSocketLink({\n// \turl: \"ws://localhost:4000/graphql\",\n// \toption: {\n// \t\treconnect: true,\n// \t},\n// });\n// const splitLink = split(\n// \t({ query }) => {Z\n// \t\tconst definition = getMainDefinition(query);\n// \t\treturn (\n// \t\t\tdefinition.kind === \"OperationDefinition\" &&\n// \t\t\tdefinition.operation === \"subscription\"\n// \t\t);\n// \t},\n// \twsLink,\n// \tauthLink.concat(httpLink)\n// );\n// const client = new ApolloClient({\n// \tcache: new InMemoryCache(),\n// \tlink: splitLink,\n// });\n\nvar client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat()\n});\n\nvar MyApp = function MyApp(_ref2) {\n  _s();\n\n  var Component = _ref2.Component,\n      pageProps = _ref2.pageProps;\n  // eslint-disable-next-line react/prop-types\n  var store = useStore(pageProps.initialReduxStore);\n  return __jsx(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, __jsx(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }))));\n};\n\n_s(MyApp, \"lacCqcEtsbxX3PAG/fPlTuRiPg0=\", false, function () {\n  return [useStore];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/pages/_app.tsx"],"names":["React","ApolloClient","HttpLink","InMemoryCache","ApolloProvider","setContext","Provider","useStore","authLink","_","headers","token","localStorage","getItem","authorization","httpLink","uri","client","cache","link","concat","MyApp","Component","pageProps","store","initialReduxStore"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,YADD,EAECC,QAFD,EAGCC,aAHD,EAICC,cAJD,QAMO,gBANP;AAQA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,UAAzB,C,CACA;;AAEA,IAAMC,QAAQ,GAAGH,UAAU,CAAC,UAACI,CAAD,QAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC/C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;AACA,SAAO;AACNH,IAAAA,OAAO,kCACHA,OADG;AAENI,MAAAA,aAAa,EAAEH,KAAK,qBAAcA,KAAd;AAFd;AADD,GAAP;AAMA,CAR0B,CAA3B;AAUA,IAAMI,QAAkB,GAAG,IAAIb,QAAJ,CAAa;AACvCc,EAAAA,GAAG,EAAE;AADkC,CAAb,CAA3B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC/BiB,EAAAA,KAAK,EAAE,IAAIf,aAAJ,EADwB;AAE/BgB,EAAAA,IAAI,EAAEX,QAAQ,CAACY,MAAT;AAFyB,CAAjB,CAAf;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,QAA2C;AAAA;;AAAA,MAAxCC,SAAwC,SAAxCA,SAAwC;AAAA,MAA7BC,SAA6B,SAA7BA,SAA6B;AACxD;AACA,MAAMC,KAAK,GAAGjB,QAAQ,CAACgB,SAAS,CAACE,iBAAX,CAAtB;AAEA,SACC,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADD,CADD;AAOA,CAXD;;GAAMF,K;UAESd,Q;;;KAFTc,K;AAaN,eAAeA,KAAf","sourcesContent":["import \"../styles/globals.css\";\nimport React from \"react\";\nimport {\n\tApolloClient,\n\tHttpLink,\n\tInMemoryCache,\n\tApolloProvider,\n\tsplit,\n} from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { setContext } from \"apollo-link-context\";\nimport { Provider } from \"react-redux\";\nimport { useStore } from \"../store\";\n// import { WebSocketLink } from \"@apollo/link-ws\";\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem(\"user\");\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token && `bearer ${token}`,\n\t\t},\n\t};\n});\n\nconst httpLink: HttpLink = new HttpLink({\n\turi: \"http://localhost:4000/graphql\",\n});\n\n// const wsLink = new WebSocketLink({\n// \turl: \"ws://localhost:4000/graphql\",\n// \toption: {\n// \t\treconnect: true,\n// \t},\n// });\n\n// const splitLink = split(\n// \t({ query }) => {Z\n// \t\tconst definition = getMainDefinition(query);\n// \t\treturn (\n// \t\t\tdefinition.kind === \"OperationDefinition\" &&\n// \t\t\tdefinition.operation === \"subscription\"\n// \t\t);\n// \t},\n// \twsLink,\n// \tauthLink.concat(httpLink)\n// );\n\n// const client = new ApolloClient({\n// \tcache: new InMemoryCache(),\n// \tlink: splitLink,\n// });\n\nconst client = new ApolloClient({\n\tcache: new InMemoryCache(),\n\tlink: authLink.concat()\n});\n\nconst MyApp = ({ Component, pageProps }): JSX.Element => {\n\t// eslint-disable-next-line react/prop-types\n\tconst store = useStore(pageProps.initialReduxStore);\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<Component {...pageProps} />\n\t\t\t</ApolloProvider>\n\t\t</Provider>\n\t);\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}