{"ast":null,"code":"var _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendsList/Friends.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Friend from \"./Friend/Friend\";\nimport { v4 as uuid } from \"uuid\";\nimport { FIND_USER_FRIENDS_BY_ID } from \"../../queries/user.query\";\n\nconst Friends = () => {\n  const {\n    0: id,\n    1: setId\n  } = useState();\n  const {\n    loading,\n    data\n  } = useQuery(FIND_USER_FRIENDS_BY_ID, {\n    variables: {\n      id: localStorage.getItem(\"id\")\n    }\n  });\n  if (loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 22\n    }\n  }, \"Loading ... \");\n\n  const presentFriends = () => data.findUserFriendsById.map(friend => __jsx(React.Fragment, null, __jsx(Friend, {\n    key: uuid(),\n    firstName: friend.firstName,\n    lastName: friend.lastName,\n    avatar: friend.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  })));\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, \"My friends\"), presentFriends());\n};\n\nexport default Friends;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendsList/Friends.tsx"],"names":["React","useState","useQuery","Friend","v4","uuid","FIND_USER_FRIENDS_BY_ID","Friends","id","setId","loading","data","variables","localStorage","getItem","presentFriends","findUserFriendsById","map","friend","firstName","lastName","avatar"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAgC,iBAAhC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,uBAAT,QAAwC,0BAAxC;;AAEA,MAAMC,OAAO,GAAG,MAAmB;AAClC,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcR,QAAQ,EAA5B;AAEA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBT,QAAQ,CAACI,uBAAD,EAA0B;AAC3DM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEK,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAN;AADgD,GAA1B,CAAlC;AAGA,MAAIJ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;;AAEb,QAAMK,cAAc,GAAG,MACtBJ,IAAI,CAACK,mBAAL,CAAyBC,GAAzB,CAA8BC,MAAD,IAC5B,4BACC,MAAC,MAAD;AACC,IAAA,GAAG,EAAEb,IAAI,EADV;AAEC,IAAA,SAAS,EAAEa,MAAM,CAACC,SAFnB;AAGC,IAAA,QAAQ,EAAED,MAAM,CAACE,QAHlB;AAIC,IAAA,MAAM,EAAEF,MAAM,CAACG,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADD;;AAYA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEEN,cAAc,EAFhB,CADD;AAMA,CA1BD;;AA4BA,eAAeR,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Friend, { IFriend } from \"./Friend/Friend\";\nimport { v4 as uuid } from \"uuid\";\nimport { FIND_USER_FRIENDS_BY_ID } from \"../../queries/user.query\";\n\nconst Friends = (): JSX.Element => {\n\tconst [id, setId] = useState()\n\n\tconst { loading, data } = useQuery(FIND_USER_FRIENDS_BY_ID, {\n\t\tvariables: { id: localStorage.getItem(\"id\") },\n\t});\n\tif (loading) return <div>Loading ... </div>;\n\n\tconst presentFriends = () =>\n\t\tdata.findUserFriendsById.map((friend: IFriend) => (\n\t\t\t<>\n\t\t\t\t<Friend\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\tfirstName={friend.firstName}\n\t\t\t\t\tlastName={friend.lastName}\n\t\t\t\t\tavatar={friend.avatar}\n\t\t\t\t/>\n\t\t\t</>\n\t\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>My friends</h2>\n\t\t\t{presentFriends()}\n\t\t</div>\n\t);\n};\n\nexport default Friends;\n"]},"metadata":{},"sourceType":"module"}