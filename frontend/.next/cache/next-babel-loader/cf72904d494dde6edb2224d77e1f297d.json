{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation deletePost($id: ID!) {\\n\\t\\tdeletePost(id: $id) {\\n\\t\\t\\tid\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation unLikePost($id: String!, $userId: String!) {\\n\\t\\tunLikePost(id: $id, userId: $userId) {\\n\\t\\t\\tlikes\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation likePost($id: String!, $userId: String!) {\\n\\t\\tlikePost(id: $id, userId: $userId) {\\n\\t\\t\\tlikes\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery isLikedByUser($id: String!, $userId: String!) {\\n\\t\\tisLikedByUser(id: $id, userId: $userId)\\n\\t}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery findPostById($id: String!) {\\n\\t\\tfindPostById(id: $id) {\\n\\t\\t\\tid\\n\\t\\t\\tuser {\\n\\t\\t\\t\\tfirstName\\n\\t\\t\\t\\tlastName\\n\\t\\t\\t}\\n\\t\\t\\tdate\\n\\t\\t\\tcontent\\n\\t\\t\\tlikes\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery allPosts {\\n\\t\\tallPosts {\\n\\t\\t\\tid\\n\\t\\t\\tuser {\\n\\t\\t\\t\\tfirstName\\n\\t\\t\\t\\tlastName\\n\\t\\t\\t}\\n\\t\\t\\tdate\\n\\t\\t\\tcontent\\n\\t\\t\\tlikes\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"@apollo/client\";\nexport var ALL_POSTS = gql(_templateObject());\nexport var FIND_POST_BY_ID = gql(_templateObject2());\nexport var IS_LIKED_BY_USER = gql(_templateObject3());\nexport var LIKE_POST = gql(_templateObject4());\nexport var UNLIKE_POST = gql(_templateObject5());\nexport var DELETE_POST = gql(_templateObject6()); // export const POSTS = gql`\n// \tquery allPosts {\n// \t\tallPosts {\n// \t\t\tid\n// \t\t\tuser {\n// \t\t\t\tfirstName\n// \t\t\t\tlastName\n// \t\t\t}\n// \t\t\tdate\n// \t\t\tcontent\n// \t\t\tlikes\n// \t\t}\n// \t}\n// \tquery isLikedByUser($id: ID!, $userId: ID!) {\n// \t\tisLikedByUser(id: $id, userId: $userId)\n// \t}\n// \tmutation likePost($id: ID!, $userId: ID!) {\n// \t\tlikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n// \tmutation unLikePost($id: ID!, $userId: ID!) {\n// \t\tunLikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n// \tmutation deletePost($id: ID!) {\n// \t\tdeletePost(id: $id) {\n// \t\t\tid\n// \t\t}\n// \t}\n// `;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/queries/post.query.ts"],"names":["gql","ALL_POSTS","FIND_POST_BY_ID","IS_LIKED_BY_USER","LIKE_POST","UNLIKE_POST","DELETE_POST"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,IAAMC,SAAS,GAAGD,GAAH,mBAAf;AAeP,OAAO,IAAME,eAAe,GAAGF,GAAH,oBAArB;AAeP,OAAO,IAAMG,gBAAgB,GAAGH,GAAH,oBAAtB;AAMP,OAAO,IAAMI,SAAS,GAAGJ,GAAH,oBAAf;AAQP,OAAO,IAAMK,WAAW,GAAGL,GAAH,oBAAjB;AAQP,OAAO,IAAMM,WAAW,GAAGN,GAAH,oBAAjB,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const ALL_POSTS = gql`\n\tquery allPosts {\n\t\tallPosts {\n\t\t\tid\n\t\t\tuser {\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t}\n\t\t\tdate\n\t\t\tcontent\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const FIND_POST_BY_ID = gql`\n\tquery findPostById($id: String!) {\n\t\tfindPostById(id: $id) {\n\t\t\tid\n\t\t\tuser {\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t}\n\t\t\tdate\n\t\t\tcontent\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const IS_LIKED_BY_USER = gql`\n\tquery isLikedByUser($id: String!, $userId: String!) {\n\t\tisLikedByUser(id: $id, userId: $userId)\n\t}\n`;\n\nexport const LIKE_POST = gql`\n\tmutation likePost($id: String!, $userId: String!) {\n\t\tlikePost(id: $id, userId: $userId) {\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const UNLIKE_POST = gql`\n\tmutation unLikePost($id: String!, $userId: String!) {\n\t\tunLikePost(id: $id, userId: $userId) {\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const DELETE_POST = gql`\n\tmutation deletePost($id: ID!) {\n\t\tdeletePost(id: $id) {\n\t\t\tid\n\t\t}\n\t}\n`;\n\n// export const POSTS = gql`\n// \tquery allPosts {\n// \t\tallPosts {\n// \t\t\tid\n// \t\t\tuser {\n// \t\t\t\tfirstName\n// \t\t\t\tlastName\n// \t\t\t}\n// \t\t\tdate\n// \t\t\tcontent\n// \t\t\tlikes\n// \t\t}\n// \t}\n\n// \tquery isLikedByUser($id: ID!, $userId: ID!) {\n// \t\tisLikedByUser(id: $id, userId: $userId)\n// \t}\n\n// \tmutation likePost($id: ID!, $userId: ID!) {\n// \t\tlikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n\n// \tmutation unLikePost($id: ID!, $userId: ID!) {\n// \t\tunLikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n\n// \tmutation deletePost($id: ID!) {\n// \t\tdeletePost(id: $id) {\n// \t\t\tid\n// \t\t}\n// \t}\n\n// `;\n"]},"metadata":{},"sourceType":"module"}