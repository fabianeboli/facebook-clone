{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/esm/toArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Posts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { v4 as uuid } from \"uuid\";\nimport Post from \"./Post/Post\";\nimport { ALL_POSTS } from \"../../queries/post.query\";\n\nvar Posts = function Posts() {\n  _s();\n\n  var result = useQuery(ALL_POSTS);\n\n  var _ref,\n      _ref2 = _toArray(_ref);\n\n  if (result.loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 29\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, \"Posts\"), result.data.allPosts.map(function (post) {\n    var _post$user, _post$user2;\n\n    return __jsx(Post, {\n      key: uuid(),\n      firstName: post === null || post === void 0 ? void 0 : (_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.firstName,\n      lastName: post === null || post === void 0 ? void 0 : (_post$user2 = post.user) === null || _post$user2 === void 0 ? void 0 : _post$user2.lastName,\n      date: post.date,\n      likes: post.likes,\n      content: post.content,\n      comments: post.comments,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    });\n  }));\n};\n\n_s(Posts, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Posts.tsx"],"names":["React","useQuery","v4","uuid","Post","ALL_POSTS","Posts","result","loading","data","allPosts","map","post","user","firstName","lastName","date","likes","content","comments"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,IAAP,MAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAmB;AAAA;;AAChC,MAAMC,MAAM,GAAGN,QAAQ,CAACI,SAAD,CAAvB;;AADgC;AAAA;;AAIhC,MAAIE,MAAM,CAACC,OAAX,EAAoB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEpB,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEED,MAAM,CAACE,IAAP,CAAYC,QAAZ,CAAqBC,GAArB,CAAyB,UAACC,IAAD;AAAA;;AAAA,WACzB,MAAC,IAAD;AACC,MAAA,GAAG,EAAET,IAAI,EADV;AAEC,MAAA,SAAS,EAAES,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEC,IAAR,+CAAE,WAAYC,SAFxB;AAGC,MAAA,QAAQ,EAAEF,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEC,IAAR,gDAAE,YAAYE,QAHvB;AAIC,MAAA,IAAI,EAAEH,IAAI,CAACI,IAJZ;AAKC,MAAA,KAAK,EAAEJ,IAAI,CAACK,KALb;AAMC,MAAA,OAAO,EAAEL,IAAI,CAACM,OANf;AAOC,MAAA,QAAQ,EAAEN,IAAI,CAACO,QAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAAzB,CAFF,CADD;AAgBA,CAtBD;;GAAMb,K;UACUL,Q;;;KADVK,K;AAwBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { v4 as uuid } from \"uuid\";\nimport Post, { IPost } from \"./Post/Post\";\nimport { ALL_POSTS } from \"../../queries/post.query\";\n\n\nconst Posts = (): JSX.Element => {\n\tconst result = useQuery(ALL_POSTS);\n\tconst []\n\t\n\tif (result.loading) return <div>Loading...</div>;\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Posts</h3>\n\t\t\t{result.data.allPosts.map((post: IPost) => (\n\t\t\t\t<Post\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\tfirstName={post?.user?.firstName}\n\t\t\t\t\tlastName={post?.user?.lastName}\n\t\t\t\t\tdate={post.date}\n\t\t\t\t\tlikes={post.likes}\n\t\t\t\t\tcontent={post.content}\n\t\t\t\t\tcomments={post.comments}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}