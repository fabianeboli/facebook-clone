{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendsList/Friends.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Friend from \"./Friend/Friend\";\nimport { v4 as uuid } from \"uuid\";\nimport { FIND_USER_FRIENDS_BY_ID } from \"../../queries/user.query\";\n\nvar Friends = function Friends() {\n  _s();\n\n  var _useState = useState(\"\"),\n      id = _useState[0],\n      setId = _useState[1];\n\n  useEffect(function () {\n    setId(localStorage.getItem(\"id\"));\n  }, []);\n\n  var _useQuery = useQuery(FIND_USER_FRIENDS_BY_ID, {\n    variables: {\n      id: id\n    },\n    po: po\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }\n  }, \"Loading ... \");\n\n  var presentFriends = function presentFriends() {\n    return data === null || data === void 0 ? void 0 : data.findUserFriendsById.map(function (friend) {\n      return __jsx(React.Fragment, null, __jsx(Friend, {\n        key: uuid(),\n        firstName: friend.firstName,\n        lastName: friend.lastName,\n        avatar: friend.avatar,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }\n      }));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, \"My friends\"), data.findUserFriendsById.map(function (friend) {\n    return __jsx(React.Fragment, null, __jsx(Friend, {\n      key: uuid(),\n      firstName: friend.firstName,\n      lastName: friend.lastName,\n      avatar: friend.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    }));\n  }));\n};\n\n_s(Friends, \"6co5XaYOM3RZjkCaioP1oVjENpc=\", false, function () {\n  return [useQuery];\n});\n\n_c = Friends;\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendsList/Friends.tsx"],"names":["React","useState","useEffect","useQuery","Friend","v4","uuid","FIND_USER_FRIENDS_BY_ID","Friends","id","setId","localStorage","getItem","variables","po","loading","data","presentFriends","findUserFriendsById","map","friend","firstName","lastName","avatar"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAgC,iBAAhC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,uBAAT,QAAwC,0BAAxC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAmB;AAAA;;AAAA,kBACdP,QAAQ,CAAS,EAAT,CADM;AAAA,MAC3BQ,EAD2B;AAAA,MACvBC,KADuB;;AAGlCR,EAAAA,SAAS,CAAC,YAAM;AACfQ,IAAAA,KAAK,CAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAAL;AACA,GAFQ,EAEN,EAFM,CAAT;;AAHkC,kBAORT,QAAQ,CAACI,uBAAD,EAA0B;AAC3DM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAFA;AAAF,KADgD;AAG3DK,IAAAA,EAAE,EAAFA;AAH2D,GAA1B,CAPA;AAAA,MAO1BC,OAP0B,aAO1BA,OAP0B;AAAA,MAOjBC,IAPiB,aAOjBA,IAPiB;;AAalC,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;;AAEb,MAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WACtBD,IADsB,aACtBA,IADsB,uBACtBA,IAAI,CAAEE,mBAAN,CAA0BC,GAA1B,CAA8B,UAACC,MAAD;AAAA,aAC7B,4BACC,MAAC,MAAD;AACC,QAAA,GAAG,EAAEd,IAAI,EADV;AAEC,QAAA,SAAS,EAAEc,MAAM,CAACC,SAFnB;AAGC,QAAA,QAAQ,EAAED,MAAM,CAACE,QAHlB;AAIC,QAAA,MAAM,EAAEF,MAAM,CAACG,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAD6B;AAAA,KAA9B,CADsB;AAAA,GAAvB;;AAYA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEEP,IAAI,CAACE,mBAAL,CAAyBC,GAAzB,CAA6B,UAACC,MAAD;AAAA,WAC7B,4BACC,MAAC,MAAD;AACC,MAAA,GAAG,EAAEd,IAAI,EADV;AAEC,MAAA,SAAS,EAAEc,MAAM,CAACC,SAFnB;AAGC,MAAA,QAAQ,EAAED,MAAM,CAACE,QAHlB;AAIC,MAAA,MAAM,EAAEF,MAAM,CAACG,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAD6B;AAAA,GAA7B,CAFF,CADD;AAeA,CA1CD;;GAAMf,O;UAOqBL,Q;;;KAPrBK,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Friend, { IFriend } from \"./Friend/Friend\";\nimport { v4 as uuid } from \"uuid\";\nimport { FIND_USER_FRIENDS_BY_ID } from \"../../queries/user.query\";\n\nconst Friends = (): JSX.Element => {\n\tconst [id, setId] = useState<string>(\"\");\n\n\tuseEffect(() => {\n\t\tsetId(localStorage.getItem(\"id\"));\n\t}, []);\n\n\tconst { loading, data } = useQuery(FIND_USER_FRIENDS_BY_ID, {\n\t\tvariables: { id },\n\t\t\n\t\tpo\n\n\t});\n\tif (loading) return <div>Loading ... </div>;\n\n\tconst presentFriends = () =>\n\t\tdata?.findUserFriendsById.map((friend: IFriend) => (\n\t\t\t<>\n\t\t\t\t<Friend\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\tfirstName={friend.firstName}\n\t\t\t\t\tlastName={friend.lastName}\n\t\t\t\t\tavatar={friend.avatar}\n\t\t\t\t/>\n\t\t\t</>\n\t\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>My friends</h2>\n\t\t\t{data.findUserFriendsById.map((friend: IFriend) => (\n\t\t\t\t<>\n\t\t\t\t\t<Friend\n\t\t\t\t\t\tkey={uuid()}\n\t\t\t\t\t\tfirstName={friend.firstName}\n\t\t\t\t\t\tlastName={friend.lastName}\n\t\t\t\t\t\tavatar={friend.avatar}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Friends;\n"]},"metadata":{},"sourceType":"module"}