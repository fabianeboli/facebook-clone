{"ast":null,"code":"var _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendRequests/FriendRequests.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Friend from \"../Friends/Friend/Friend\";\nimport { useQuery } from \"@apollo/client\";\nimport { FIND_USER_FRIEND_REQUESTS_BY_ID } from \"../../queries/user.query\";\nimport { v4 as uuid } from \"uuid\";\n\nconst FriendRequests = () => {\n  const {\n    0: id,\n    1: setId\n  } = useState();\n  useEffect(() => {\n    setId(localStorage.getItem(\"id\"));\n  }, []);\n  const {\n    data,\n    loading\n  } = useQuery(FIND_USER_FRIEND_REQUESTS_BY_ID, {\n    variables: {\n      id\n    },\n    pollInterval: 13500\n  });\n  if (loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }\n  }, \"Loading ... \");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, \"My friends Requests\"), data.findUserFriendsRequestsById.map(friend => __jsx(React.Fragment, null, __jsx(Friend, {\n    key: uuid(),\n    firstName: friend.firstName,\n    lastName: friend.lastName,\n    avatar: friend.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default FriendRequests;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendRequests/FriendRequests.tsx"],"names":["React","useState","useEffect","Friend","useQuery","FIND_USER_FRIEND_REQUESTS_BY_ID","v4","uuid","FriendRequests","id","setId","localStorage","getItem","data","loading","variables","pollInterval","findUserFriendsRequestsById","map","friend","firstName","lastName","avatar"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAgC,0BAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,+BAAT,QAAgD,0BAAhD;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC5B,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcT,QAAQ,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,KAAK,CAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAAL;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBV,QAAQ,CAACC,+BAAD,EAAkC;AACnEU,IAAAA,SAAS,EAAE;AACVN,MAAAA;AADU,KADwD;AAInEO,IAAAA,YAAY,EAAE;AAJqD,GAAlC,CAAlC;AAOA,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEb,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,EAEED,IAAI,CAACI,2BAAL,CAAiCC,GAAjC,CAAsCC,MAAD,IACrC,4BACC,MAAC,MAAD;AACC,IAAA,GAAG,EAAEZ,IAAI,EADV;AAEC,IAAA,SAAS,EAAEY,MAAM,CAACC,SAFnB;AAGC,IAAA,QAAQ,EAAED,MAAM,CAACE,QAHlB;AAIC,IAAA,MAAM,EAAEF,MAAM,CAACG,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADA,CAFF,CADD;AAeA,CA/BD;;AAiCA,eAAed,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Friend, { IFriend } from \"../Friends/Friend/Friend\";\nimport { useQuery } from \"@apollo/client\";\nimport { FIND_USER_FRIEND_REQUESTS_BY_ID } from \"../../queries/user.query\";\nimport { v4 as uuid } from \"uuid\";\n\nconst FriendRequests = () => {\n\tconst [id, setId] = useState<string>();\n\n\tuseEffect(() => {\n\t\tsetId(localStorage.getItem(\"id\"));\n\t}, []);\n\n\tconst { data, loading } = useQuery(FIND_USER_FRIEND_REQUESTS_BY_ID, {\n\t\tvariables: {\n\t\t\tid,\n\t\t},\n\t\tpollInterval: 13500,\n\t});\n\n\tif (loading) return <div>Loading ... </div>;\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>My friends Requests</h2>\n\t\t\t{data.findUserFriendsRequestsById.map((friend: IFriend) => (\n\t\t\t\t<>\n\t\t\t\t\t<Friend\n\t\t\t\t\t\tkey={uuid()}\n\t\t\t\t\t\tfirstName={friend.firstName}\n\t\t\t\t\t\tlastName={friend.lastName}\n\t\t\t\t\t\tavatar={friend.avatar}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default FriendRequests;\n"]},"metadata":{},"sourceType":"module"}