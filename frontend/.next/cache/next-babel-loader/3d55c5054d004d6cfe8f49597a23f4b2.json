{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const ALL_POSTS = gql`\n\tquery allPosts {\n\t\tallPosts {\n\t\t\tid\n\t\t\tuser {\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t}\n\t\t\tdate\n\t\t\tcontent\n\t\t\tlikes\n\t\t}\n\t}\n`;\nexport const FIND_USER_BY_ID = gql`\n\tquery findUserById($id: String!) {\n\t\tfindUserById(id: $id) \tid\n\t\t\tuser {\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t}\n\t\t\tdate\n\t\t\tcontent\n\t\t\tlikes\n\t\t}\n\t}\n`;\nexport const IS_LIKED_BY_USER = gql`\n\tquery isLikedByUser($id: String!, $userId: String!) {\n\t\tisLikedByUser(id: $id, userId: $userId)\n\t}\n`;\nexport const LIKE_POST = gql`\n\tmutation likePost($id: String!, $userId: String!) {\n\t\tlikePost(id: $id, userId: $userId) {\n\t\t\tlikes\n\t\t}\n\t}\n`;\nexport const UNLIKE_POST = gql`\n\tmutation unLikePost($id: String!, $userId: String!) {\n\t\tunLikePost(id: $id, userId: $userId) {\n\t\t\tlikes\n\t\t}\n\t}\n`;\nexport const DELETE_POST = gql`\n\tmutation deletePost($id: ID!) {\n\t\tdeletePost(id: $id) {\n\t\t\tid\n\t\t}\n\t}\n`; // export const POSTS = gql`\n// \tquery allPosts {\n// \t\tallPosts {\n// \t\t\tid\n// \t\t\tuser {\n// \t\t\t\tfirstName\n// \t\t\t\tlastName\n// \t\t\t}\n// \t\t\tdate\n// \t\t\tcontent\n// \t\t\tlikes\n// \t\t}\n// \t}\n// \tquery isLikedByUser($id: ID!, $userId: ID!) {\n// \t\tisLikedByUser(id: $id, userId: $userId)\n// \t}\n// \tmutation likePost($id: ID!, $userId: ID!) {\n// \t\tlikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n// \tmutation unLikePost($id: ID!, $userId: ID!) {\n// \t\tunLikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n// \tmutation deletePost($id: ID!) {\n// \t\tdeletePost(id: $id) {\n// \t\t\tid\n// \t\t}\n// \t}\n// `;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/queries/post.query.ts"],"names":["gql","ALL_POSTS","FIND_USER_BY_ID","IS_LIKED_BY_USER","LIKE_POST","UNLIKE_POST","DELETE_POST"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,SAAS,GAAGD,GAAI;;;;;;;;;;;;;CAAtB;AAeP,OAAO,MAAME,eAAe,GAAGF,GAAI;;;;;;;;;;;;CAA5B;AAcP,OAAO,MAAMG,gBAAgB,GAAGH,GAAI;;;;CAA7B;AAMP,OAAO,MAAMI,SAAS,GAAGJ,GAAI;;;;;;CAAtB;AAQP,OAAO,MAAMK,WAAW,GAAGL,GAAI;;;;;;CAAxB;AAQP,OAAO,MAAMM,WAAW,GAAGN,GAAI;;;;;;CAAxB,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const ALL_POSTS = gql`\n\tquery allPosts {\n\t\tallPosts {\n\t\t\tid\n\t\t\tuser {\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t}\n\t\t\tdate\n\t\t\tcontent\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const FIND_USER_BY_ID = gql`\n\tquery findUserById($id: String!) {\n\t\tfindUserById(id: $id) \tid\n\t\t\tuser {\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t}\n\t\t\tdate\n\t\t\tcontent\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const IS_LIKED_BY_USER = gql`\n\tquery isLikedByUser($id: String!, $userId: String!) {\n\t\tisLikedByUser(id: $id, userId: $userId)\n\t}\n`;\n\nexport const LIKE_POST = gql`\n\tmutation likePost($id: String!, $userId: String!) {\n\t\tlikePost(id: $id, userId: $userId) {\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const UNLIKE_POST = gql`\n\tmutation unLikePost($id: String!, $userId: String!) {\n\t\tunLikePost(id: $id, userId: $userId) {\n\t\t\tlikes\n\t\t}\n\t}\n`;\n\nexport const DELETE_POST = gql`\n\tmutation deletePost($id: ID!) {\n\t\tdeletePost(id: $id) {\n\t\t\tid\n\t\t}\n\t}\n`;\n\n// export const POSTS = gql`\n// \tquery allPosts {\n// \t\tallPosts {\n// \t\t\tid\n// \t\t\tuser {\n// \t\t\t\tfirstName\n// \t\t\t\tlastName\n// \t\t\t}\n// \t\t\tdate\n// \t\t\tcontent\n// \t\t\tlikes\n// \t\t}\n// \t}\n\n// \tquery isLikedByUser($id: ID!, $userId: ID!) {\n// \t\tisLikedByUser(id: $id, userId: $userId)\n// \t}\n\n// \tmutation likePost($id: ID!, $userId: ID!) {\n// \t\tlikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n\n// \tmutation unLikePost($id: ID!, $userId: ID!) {\n// \t\tunLikePost(id: $id, userId: $userId) {\n// \t\t\tlikes\n// \t\t}\n// \t}\n\n// \tmutation deletePost($id: ID!) {\n// \t\tdeletePost(id: $id) {\n// \t\t\tid\n// \t\t}\n// \t}\n\n// `;\n"]},"metadata":{},"sourceType":"module"}