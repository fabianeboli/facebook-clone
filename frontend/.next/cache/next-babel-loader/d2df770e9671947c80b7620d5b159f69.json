{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Comment from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { LIKE_POST, ALL_POSTS, UNLIKE_POST, IS_LIKED_BY_USER } from \"../../../queries/post.query\";\n\nvar Post = function Post(props) {\n  _s();\n\n  var _props$user, _props$user2, _props$comments;\n\n  var _useMutation = useMutation(LIKE_POST, {\n    refetchQueries: [{\n      query: ALL_POSTS\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      like = _useMutation2[0];\n\n  var _useMutation3 = useMutation(UNLIKE_POST, {\n    refetchQueries: [{\n      query: ALL_POSTS\n    }]\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      unLike = _useMutation4[0];\n\n  var result = useQuery(IS_LIKED_BY_USER);\n  if (result.loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \" Loading... \");\n\n  var LikeUnLikeButton = function LikeUnLikeButton() {\n    var isLikedByUser = result.data.isLikedByUser({\n      variables: {\n        id: props.id,\n        userId: localStorage.getItem(\"id\")\n      }\n    });\n    console.log(isLikedByUser);\n\n    var likeButton = __jsx(\"button\", {\n      onClick: function onClick() {\n        return like({\n          variables: {\n            id: props.id,\n            userId: localStorage.getItem(\"id\")\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, \" \", \"Like\", \" \");\n\n    var unLikeButton = __jsx(\"button\", {\n      onClick: function onClick() {\n        return unLike({\n          variables: {\n            id: props.id,\n            userId: localStorage.getItem(\"id\")\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, \" \", \"Unlike\", \" \");\n\n    return isLikedByUser ? likeButton : unLikeButton;\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, (_props$user = props.user) === null || _props$user === void 0 ? void 0 : _props$user.firstName, \" \", (_props$user2 = props.user) === null || _props$user2 === void 0 ? void 0 : _props$user2.lastName, \" \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, props.date))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, props.content)), __jsx(\"likeUnLikeButton\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, props.likes), \" \", __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, props === null || props === void 0 ? void 0 : (_props$comments = props.comments) === null || _props$comments === void 0 ? void 0 : _props$comments.map(function (comment) {\n    __jsx(Comment, {\n      firstName: comment.firstName,\n      lastName: comment.lastName,\n      content: comment.content,\n      date: comment.date,\n      likes: comment.likes,\n      comments: comment.comments,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    });\n  })));\n};\n\n_s(Post, \"TP/SdjB7mb4OHDsvH73s3SL8afs=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx"],"names":["React","Comment","useMutation","useQuery","LIKE_POST","ALL_POSTS","UNLIKE_POST","IS_LIKED_BY_USER","Post","props","refetchQueries","query","like","unLike","result","loading","LikeUnLikeButton","isLikedByUser","data","variables","id","userId","localStorage","getItem","console","log","likeButton","unLikeButton","user","firstName","lastName","date","content","likes","comments","map","comment"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\nimport Comment, { IComment } from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n\tLIKE_POST,\n\tALL_POSTS,\n\tUNLIKE_POST,\n\tIS_LIKED_BY_USER,\n} from \"../../../queries/post.query\";\n\nexport interface IPost {\n\tid: string;\n\tuser?: {\n\t\tfirstName: string;\n\t\tlastName: string;\n\t};\n\tfirstName: string;\n\tlastName: string;\n\tdate: string;\n\tcontent: string;\n\tlikes: number;\n\tcomments: IComment[];\n}\n\nconst Post = (props: IPost): JSX.Element => {\n\tconst [like] = useMutation(LIKE_POST, {\n\t\trefetchQueries: [{ query: ALL_POSTS }],\n\t});\n\tconst [unLike] = useMutation(UNLIKE_POST, {\n\t\trefetchQueries: [{ query: ALL_POSTS }],\n\t});\n\n\tconst result = useQuery(IS_LIKED_BY_USER);\n\tif (result.loading) return <div> Loading... </div>;\n\n\tconst LikeUnLikeButton = (): JSX.Element => {\n\t\tconst isLikedByUser = result.data.isLikedByUser({\n\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t});\n\t\tconsole.log(isLikedByUser);\n\t\tconst likeButton = (\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tlike({\n\t\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{\" \"}\n\t\t\t\tLike{\" \"}\n\t\t\t</button>\n\t\t);\n\n\t\tconst unLikeButton = (\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tunLike({\n\t\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{\" \"}\n\t\t\t\tUnlike{\" \"}\n\t\t\t</button>\n\t\t);\n\n\t\treturn isLikedByUser ? likeButton : unLikeButton;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t{props.user?.firstName} {props.user?.lastName}{\" \"}\n\t\t\t\t\t<span>{props.date}</span>\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>{props.content}</p>\n\t\t\t</div>\n\t\t\t<likeUnLikeButton/>\n\t\t\t<div>{props.likes}</div>{\" \"}\n\t\t\t<div>\n\t\t\t\t{props?.comments?.map((comment: IComment) => {\n\t\t\t\t\t<Comment\n\t\t\t\t\t\tfirstName={comment.firstName}\n\t\t\t\t\t\tlastName={comment.lastName}\n\t\t\t\t\t\tcontent={comment.content}\n\t\t\t\t\t\tdate={comment.date}\n\t\t\t\t\t\tlikes={comment.likes}\n\t\t\t\t\t\tcomments={comment.comments}\n\t\t\t\t\t/>;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}