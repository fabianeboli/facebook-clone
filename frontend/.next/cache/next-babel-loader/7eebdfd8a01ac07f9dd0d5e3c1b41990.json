{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Comment from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { LIKE_POST, UNLIKE_POST, IS_LIKED_BY_USER, FIND_POST_BY_ID } from \"../../../queries/post.query\";\n\nvar Post = function Post(props) {\n  _s();\n\n  var _props$user, _props$user2, _props$comments;\n\n  // !TODO BUTTON SHOULD BE DISABLED WHILE LIKING OR UNLIKING\n  // !TODO BUTTON SHOULD DYNAMICALLY CHANGE TEXT\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useMutation = useMutation(LIKE_POST, {\n    refetchQueries: [{\n      query: FIND_POST_BY_ID,\n      variables: {\n        id: props.id\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      like = _useMutation2[0];\n\n  var _useMutation3 = useMutation(UNLIKE_POST, {\n    refetchQueries: [{\n      query: FIND_POST_BY_ID,\n      variables: {\n        id: props.id\n      }\n    }, {}]\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      unLike = _useMutation4[0];\n\n  var _useQuery = useQuery(IS_LIKED_BY_USER, {\n    variables: {\n      id: props.id,\n      userId: localStorage.getItem(\"id\")\n    },\n    errorPolicy: \"all\",\n    onError: function onError(error) {\n      console.log(\"Error: \", error.message);\n    }\n  }),\n      data = _useQuery.data;\n\n  var likeFunction = function likeFunction() {\n    setLoading(true);\n    (data === null || data === void 0 ? void 0 : data.isLikedByUser) ? like({\n      variables: {\n        id: props.id,\n        userId: localStorage.getItem(\"id\")\n      }\n    }) : unLike({\n      variables: {\n        id: props.id,\n        userId: localStorage.getItem(\"id\")\n      }\n    });\n    setLoading(false);\n  };\n\n  var LikeUnLikeButton = function LikeUnLikeButton() {\n    var likeButton = __jsx(\"button\", {\n      disabled: loading,\n      onClick: function onClick() {\n        return likeFunction();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }\n    }, \" Like \");\n\n    var unLikeButton = __jsx(\"button\", {\n      onClick: function onClick() {\n        return unLike({\n          variables: {\n            id: props.id,\n            userId: localStorage.getItem(\"id\")\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, \" \", \"Unlike\", \" \");\n\n    return (data === null || data === void 0 ? void 0 : data.isLikedByUser) ? unLikeButton : likeButton;\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, (_props$user = props.user) === null || _props$user === void 0 ? void 0 : _props$user.firstName, \" \", (_props$user2 = props.user) === null || _props$user2 === void 0 ? void 0 : _props$user2.lastName, \" \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, props.date))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, props.content)), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, props.likes), \" \", LikeUnLikeButton(), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }, props === null || props === void 0 ? void 0 : (_props$comments = props.comments) === null || _props$comments === void 0 ? void 0 : _props$comments.map(function (comment) {\n    __jsx(Comment, {\n      firstName: comment.firstName,\n      lastName: comment.lastName,\n      content: comment.content,\n      date: comment.date,\n      likes: comment.likes,\n      comments: comment.comments,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 6\n      }\n    });\n  })));\n};\n\n_s(Post, \"Xo21AB29SMuDvVLnt2S4D+pUZa4=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx"],"names":["React","useState","Comment","useMutation","useQuery","LIKE_POST","UNLIKE_POST","IS_LIKED_BY_USER","FIND_POST_BY_ID","Post","props","loading","setLoading","refetchQueries","query","variables","id","like","unLike","userId","localStorage","getItem","errorPolicy","onError","error","console","log","message","data","likeFunction","isLikedByUser","LikeUnLikeButton","likeButton","unLikeButton","user","firstName","lastName","date","content","likes","comments","map","comment"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAkC,uBAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SACCC,SADD,EAGCC,WAHD,EAICC,gBAJD,EAKCC,eALD,QAMO,6BANP;;AAsBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAA+B;AAAA;;AAAA;;AAC3C;AACA;AAF2C,kBAGbT,QAAQ,CAAU,KAAV,CAHK;AAAA,MAGpCU,OAHoC;AAAA,MAG3BC,UAH2B;;AAAA,qBAK5BT,WAAW,CAACE,SAAD,EAAY;AACrCQ,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEN,eAAT;AAA0BO,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEN,KAAK,CAACM;AAAZ;AAArC,KAAD;AADqB,GAAZ,CALiB;AAAA;AAAA,MAKpCC,IALoC;;AAAA,sBAQ1Bd,WAAW,CAACG,WAAD,EAAc;AACzCO,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEN,eAAT;AAA0BO,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEN,KAAK,CAACM;AAAZ;AAArC,KAAD,EAA0D,EAA1D;AADyB,GAAd,CARe;AAAA;AAAA,MAQpCE,MARoC;;AAAA,kBAY1Bd,QAAQ,CAACG,gBAAD,EAAmB;AAC3CQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN,KAAK,CAACM,EAAZ;AAAgBG,MAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB,KADgC;AAE3CC,IAAAA,WAAW,EAAE,KAF8B;AAG3CC,IAAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAK,CAACG,OAA7B;AACA;AAL0C,GAAnB,CAZkB;AAAA,MAYnCC,IAZmC,aAYnCA,IAZmC;;AAoB3C,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1BjB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,KAAAgB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,aAAN,IACGb,IAAI,CAAC;AACLF,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEN,KAAK,CAACM,EAAZ;AAAgBG,QAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB;AADN,KAAD,CADP,GAIGH,MAAM,CAAC;AACPH,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEN,KAAK,CAACM,EAAZ;AAAgBG,QAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB;AADJ,KAAD,CAJT;AAOAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAVD;;AAYA,MAAMmB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAmB;AAC3C,QAAMC,UAAU,GAAG;AAAQ,MAAA,QAAQ,EAAErB,OAAlB;AAA2B,MAAA,OAAO,EAAE;AAAA,eAAMkB,YAAY,EAAlB;AAAA,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnB;;AAEA,QAAMI,YAAY,GACjB;AACC,MAAA,OAAO,EAAE;AAAA,eACRf,MAAM,CAAC;AACNH,UAAAA,SAAS,EAAE;AAAEC,YAAAA,EAAE,EAAEN,KAAK,CAACM,EAAZ;AAAgBG,YAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB;AADL,SAAD,CADE;AAAA,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,GAPF,YAQQ,GARR,CADD;;AAYA,WAAO,CAAAO,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,aAAN,IAAsBG,YAAtB,GAAqCD,UAA5C;AACA,GAhBD;;AAkBA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACEtB,KAAK,CAACwB,IADR,gDACE,YAAYC,SADd,uBAC0BzB,KAAK,CAACwB,IADhC,iDAC0B,aAAYE,QADtC,EACgD,GADhD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO1B,KAAK,CAAC2B,IAAb,CAFD,CADD,CADD,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI3B,KAAK,CAAC4B,OAAV,CADD,CAPD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM5B,KAAK,CAAC6B,KAAZ,CAVD,OAU2BR,gBAAgB,EAV3C,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACErB,KADF,aACEA,KADF,0CACEA,KAAK,CAAE8B,QADT,oDACE,gBAAiBC,GAAjB,CAAqB,UAACC,OAAD,EAAuB;AAC5C,UAAC,OAAD;AACC,MAAA,SAAS,EAAEA,OAAO,CAACP,SADpB;AAEC,MAAA,QAAQ,EAAEO,OAAO,CAACN,QAFnB;AAGC,MAAA,OAAO,EAAEM,OAAO,CAACJ,OAHlB;AAIC,MAAA,IAAI,EAAEI,OAAO,CAACL,IAJf;AAKC,MAAA,KAAK,EAAEK,OAAO,CAACH,KALhB;AAMC,MAAA,QAAQ,EAAEG,OAAO,CAACF,QANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,GATA,CADF,CAXD,CADD;AA0BA,CA5ED;;GAAM/B,I;UAKUN,W,EAGEA,W,EAIAC,Q;;;KAZZK,I;AA8EN,eAAeA,IAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport Comment, { IComment } from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n\tLIKE_POST,\n\tALL_POSTS,\n\tUNLIKE_POST,\n\tIS_LIKED_BY_USER,\n\tFIND_POST_BY_ID,\n} from \"../../../queries/post.query\";\n\nexport interface IPost {\n\tid: string;\n\tuser?: {\n\t\tfirstName: string;\n\t\tlastName: string;\n\t};\n\tfirstName: string;\n\tlastName: string;\n\tdate: string;\n\tcontent: string;\n\tlikes: number;\n\tcomments: IComment[];\n}\n\nconst Post = (props: IPost): JSX.Element => {\n\t// !TODO BUTTON SHOULD BE DISABLED WHILE LIKING OR UNLIKING\n\t// !TODO BUTTON SHOULD DYNAMICALLY CHANGE TEXT\n\tconst [loading, setLoading] = useState<boolean>(false);\n\n\tconst [like] = useMutation(LIKE_POST, {\n\t\trefetchQueries: [{ query: FIND_POST_BY_ID, variables: { id: props.id } }],\n\t});\n\tconst [unLike] = useMutation(UNLIKE_POST, {\n\t\trefetchQueries: [{ query: FIND_POST_BY_ID, variables: { id: props.id } }, {}],\n\t});\n\n\tconst { data } = useQuery(IS_LIKED_BY_USER, {\n\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\terrorPolicy: \"all\",\n\t\tonError: (error) => {\n\t\t\tconsole.log(\"Error: \", error.message);\n\t\t},\n\t});\n\n\tconst likeFunction = () => {\n\t\tsetLoading(true);\n\t\tdata?.isLikedByUser\n\t\t\t? like({\n\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t  })\n\t\t\t: unLike({\n\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t  });\n\t\tsetLoading(false);\n\t};\n\n\tconst LikeUnLikeButton = (): JSX.Element => {\n\t\tconst likeButton = <button disabled={loading} onClick={() => likeFunction()}> Like </button>;\n\n\t\tconst unLikeButton = (\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tunLike({\n\t\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{\" \"}\n\t\t\t\tUnlike{\" \"}\n\t\t\t</button>\n\t\t);\n\t\treturn data?.isLikedByUser ? unLikeButton : likeButton;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t{props.user?.firstName} {props.user?.lastName}{\" \"}\n\t\t\t\t\t<span>{props.date}</span>\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>{props.content}</p>\n\t\t\t</div>\n\t\t\t<div>{props.likes}</div> {LikeUnLikeButton()}\n\t\t\t<div>\n\t\t\t\t{props?.comments?.map((comment: IComment) => {\n\t\t\t\t\t<Comment\n\t\t\t\t\t\tfirstName={comment.firstName}\n\t\t\t\t\t\tlastName={comment.lastName}\n\t\t\t\t\t\tcontent={comment.content}\n\t\t\t\t\t\tdate={comment.date}\n\t\t\t\t\t\tlikes={comment.likes}\n\t\t\t\t\t\tcomments={comment.comments}\n\t\t\t\t\t/>;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}