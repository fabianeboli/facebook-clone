{"ast":null,"code":"var _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendsList/Friends.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Friend from \"./Friend/Friend\";\nimport { v4 as uuid } from \"uuid\";\nimport { FIND_USER_FRIENDS_BY_ID } from \"../../queries/user.query\";\n\nconst Friends = () => {\n  const result = useQuery(FIND_USER_FRIENDS_BY_ID);\n  if (result.loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 29\n    }\n  }, \"Loading ... \");\n\n  const presentFriends = () => result.data.findUserFriendsById(localStorage.getItem(\"id\")).map(friend => __jsx(React.Fragment, null, __jsx(Friend, {\n    key: uuid(),\n    firstName: friend.firstName,\n    lastName: friend.lastName,\n    avatar: friend.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  })));\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, () => presentFriends());\n};\n\nexport default Friends;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/FriendsList/Friends.tsx"],"names":["React","useQuery","Friend","v4","uuid","FIND_USER_FRIENDS_BY_ID","Friends","result","loading","presentFriends","data","findUserFriendsById","localStorage","getItem","map","friend","firstName","lastName","avatar"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAgC,iBAAhC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,uBAAT,QAAwC,0BAAxC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGN,QAAQ,CAACI,uBAAD,CAAvB;AACA,MAAIE,MAAM,CAACC,OAAX,EAAoB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;;AAGpB,QAAMC,cAAc,GAAG,MACtBF,MAAM,CAACG,IAAP,CAAYC,mBAAZ,CAAgCC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAhC,EAA4DC,GAA5D,CAAiEC,MAAD,IAC/D,4BACC,MAAC,MAAD;AACC,IAAA,GAAG,EAAEX,IAAI,EADV;AAEC,IAAA,SAAS,EAAEW,MAAM,CAACC,SAFnB;AAGC,IAAA,QAAQ,EAAED,MAAM,CAACE,QAHlB;AAIC,IAAA,MAAM,EAAEF,MAAM,CAACG,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADD;;AAYA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,MAAMT,cAAc,EAA1B,CAAP;AACA,CAlBD;;AAoBA,eAAeH,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Friend, { IFriend } from \"./Friend/Friend\";\nimport { v4 as uuid } from \"uuid\";\nimport { FIND_USER_FRIENDS_BY_ID } from \"../../queries/user.query\";\n\nconst Friends = () => {\n\tconst result = useQuery(FIND_USER_FRIENDS_BY_ID);\n\tif (result.loading) return <div>Loading ... </div>;\n\n\n\tconst presentFriends = () =>\n\t\tresult.data.findUserFriendsById(localStorage.getItem(\"id\")).map((friend: IFriend) => (\n\t\t\t<>\n\t\t\t\t<Friend\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\tfirstName={friend.firstName}\n\t\t\t\t\tlastName={friend.lastName}\n\t\t\t\t\tavatar={friend.avatar}\n\t\t\t\t/>\n\t\t\t</>\n\t\t));\n\n\treturn <div>{() => presentFriends()}</div>;\n};\n\nexport default Friends;\n"]},"metadata":{},"sourceType":"module"}