{"ast":null,"code":"var _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Comment from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { LIKE_POST, UNLIKE_POST, IS_LIKED_BY_USER, FIND_POST_BY_ID } from \"../../../queries/post.query\";\n\nconst Post = props => {\n  var _props$user, _props$user2, _props$comments;\n\n  // !TODO BUTTON SHOULD BE DISABLED WHILE LIKING OR UNLIKING\n  // !TODO BUTTON SHOULD DYNAMICALLY CHANGE TEXT\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [like] = useMutation(LIKE_POST, {\n    refetchQueries: [{\n      query: FIND_POST_BY_ID,\n      variables: {\n        id: props.id\n      }\n    }]\n  });\n  const [unLike] = useMutation(UNLIKE_POST, {\n    refetchQueries: [{\n      query: FIND_POST_BY_ID,\n      variables: {\n        id: props.id\n      }\n    }]\n  });\n  const {\n    data\n  } = useQuery(IS_LIKED_BY_USER, {\n    variables: {\n      id: props.id,\n      userId: localStorage.getItem(\"id\")\n    },\n    errorPolicy: \"all\",\n    onError: error => {\n      console.log(\"Error: \", error.message);\n    }\n  });\n\n  const likeButton = () => {\n    setLoading(true);\n    like({\n      variables: {\n        id: props.id,\n        userId: localStorage.getItem(\"id\")\n      }\n    });\n    unLike({\n      variables: {\n        id: props.id,\n        userId: localStorage.getItem(\"id\")\n      }\n    });\n    setLoading(false);\n  };\n\n  const LikeUnLikeButton = () => {\n    const likeButton = __jsx(\"button\", {\n      onClick: () => like({\n        variables: {\n          id: props.id,\n          userId: localStorage.getItem(\"id\")\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, \" \", \"Like\", \" \");\n\n    const unLikeButton = __jsx(\"button\", {\n      onClick: () => unLike({\n        variables: {\n          id: props.id,\n          userId: localStorage.getItem(\"id\")\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }\n    }, \" \", \"Unlike\", \" \");\n\n    return (data === null || data === void 0 ? void 0 : data.isLikedByUser) ? unLikeButton : likeButton;\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, (_props$user = props.user) === null || _props$user === void 0 ? void 0 : _props$user.firstName, \" \", (_props$user2 = props.user) === null || _props$user2 === void 0 ? void 0 : _props$user2.lastName, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  }, props.date))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, props.content)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }, props.likes), \" \", LikeUnLikeButton(), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, props === null || props === void 0 ? void 0 : (_props$comments = props.comments) === null || _props$comments === void 0 ? void 0 : _props$comments.map(comment => {\n    __jsx(Comment, {\n      firstName: comment.firstName,\n      lastName: comment.lastName,\n      content: comment.content,\n      date: comment.date,\n      likes: comment.likes,\n      comments: comment.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    });\n  })));\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx"],"names":["React","useState","Comment","useMutation","useQuery","LIKE_POST","UNLIKE_POST","IS_LIKED_BY_USER","FIND_POST_BY_ID","Post","props","loading","setLoading","like","refetchQueries","query","variables","id","unLike","data","userId","localStorage","getItem","errorPolicy","onError","error","console","log","message","likeButton","LikeUnLikeButton","unLikeButton","isLikedByUser","user","firstName","lastName","date","content","likes","comments","map","comment"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAkC,uBAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SACCC,SADD,EAGCC,WAHD,EAICC,gBAJD,EAKCC,eALD,QAMO,6BANP;;AAsBA,MAAMC,IAAI,GAAIC,KAAD,IAA+B;AAAA;;AAC3C;AACA;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAU,KAAV,CAAtC;AAEA,QAAM,CAACY,IAAD,IAASV,WAAW,CAACE,SAAD,EAAY;AACrCS,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEP,eAAT;AAA0BQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEP,KAAK,CAACO;AAAZ;AAArC,KAAD;AADqB,GAAZ,CAA1B;AAGA,QAAM,CAACC,MAAD,IAAWf,WAAW,CAACG,WAAD,EAAc;AACzCQ,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEP,eAAT;AAA0BQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEP,KAAK,CAACO;AAAZ;AAArC,KAAD;AADyB,GAAd,CAA5B;AAIA,QAAM;AAAEE,IAAAA;AAAF,MAAWf,QAAQ,CAACG,gBAAD,EAAmB;AAC3CS,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEP,KAAK,CAACO,EAAZ;AAAgBG,MAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB,KADgC;AAE3CC,IAAAA,WAAW,EAAE,KAF8B;AAG3CC,IAAAA,OAAO,EAAGC,KAAD,IAAW;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAK,CAACG,OAA7B;AACA;AAL0C,GAAnB,CAAzB;;AAQA,QAAMC,UAAU,GAAG,MAAM;AACxBjB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,IAAI,CAAC;AACJG,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEP,KAAK,CAACO,EAAZ;AAAgBG,QAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB;AADP,KAAD,CAAJ;AAGAJ,IAAAA,MAAM,CAAC;AACNF,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEP,KAAK,CAACO,EAAZ;AAAgBG,QAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB;AADL,KAAD,CAAN;AAGAV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GATD;;AAWA,QAAMkB,gBAAgB,GAAG,MAAmB;AAC3C,UAAMD,UAAU,GACf;AACC,MAAA,OAAO,EAAE,MACRhB,IAAI,CAAC;AACJG,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEP,KAAK,CAACO,EAAZ;AAAgBG,UAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB;AADP,OAAD,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,GAPF,UAQM,GARN,CADD;;AAaA,UAAMS,YAAY,GACjB;AACC,MAAA,OAAO,EAAE,MACRb,MAAM,CAAC;AACNF,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEP,KAAK,CAACO,EAAZ;AAAgBG,UAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAxB;AADL,OAAD,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,GAPF,YAQQ,GARR,CADD;;AAYA,WAAO,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEa,aAAN,IAAsBD,YAAtB,GAAqCF,UAA5C;AACA,GA3BD;;AA6BA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACEnB,KAAK,CAACuB,IADR,gDACE,YAAYC,SADd,uBAC0BxB,KAAK,CAACuB,IADhC,iDAC0B,aAAYE,QADtC,EACgD,GADhD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOzB,KAAK,CAAC0B,IAAb,CAFD,CADD,CADD,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI1B,KAAK,CAAC2B,OAAV,CADD,CAPD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM3B,KAAK,CAAC4B,KAAZ,CAVD,OAU2BR,gBAAgB,EAV3C,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEpB,KADF,aACEA,KADF,0CACEA,KAAK,CAAE6B,QADT,oDACE,gBAAiBC,GAAjB,CAAsBC,OAAD,IAAuB;AAC5C,UAAC,OAAD;AACC,MAAA,SAAS,EAAEA,OAAO,CAACP,SADpB;AAEC,MAAA,QAAQ,EAAEO,OAAO,CAACN,QAFnB;AAGC,MAAA,OAAO,EAAEM,OAAO,CAACJ,OAHlB;AAIC,MAAA,IAAI,EAAEI,OAAO,CAACL,IAJf;AAKC,MAAA,KAAK,EAAEK,OAAO,CAACH,KALhB;AAMC,MAAA,QAAQ,EAAEG,OAAO,CAACF,QANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,GATA,CADF,CAXD,CADD;AA0BA,CAtFD;;AAwFA,eAAe9B,IAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport Comment, { IComment } from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n\tLIKE_POST,\n\tALL_POSTS,\n\tUNLIKE_POST,\n\tIS_LIKED_BY_USER,\n\tFIND_POST_BY_ID,\n} from \"../../../queries/post.query\";\n\nexport interface IPost {\n\tid: string;\n\tuser?: {\n\t\tfirstName: string;\n\t\tlastName: string;\n\t};\n\tfirstName: string;\n\tlastName: string;\n\tdate: string;\n\tcontent: string;\n\tlikes: number;\n\tcomments: IComment[];\n}\n\nconst Post = (props: IPost): JSX.Element => {\n\t// !TODO BUTTON SHOULD BE DISABLED WHILE LIKING OR UNLIKING\n\t// !TODO BUTTON SHOULD DYNAMICALLY CHANGE TEXT\n\tconst [loading, setLoading] = useState<boolean>(false);\n\n\tconst [like] = useMutation(LIKE_POST, {\n\t\trefetchQueries: [{ query: FIND_POST_BY_ID, variables: { id: props.id } }],\n\t});\n\tconst [unLike] = useMutation(UNLIKE_POST, {\n\t\trefetchQueries: [{ query: FIND_POST_BY_ID, variables: { id: props.id } }],\n\t});\n\n\tconst { data } = useQuery(IS_LIKED_BY_USER, {\n\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\terrorPolicy: \"all\",\n\t\tonError: (error) => {\n\t\t\tconsole.log(\"Error: \", error.message);\n\t\t},\n\t});\n\n\tconst likeButton = () => {\n\t\tsetLoading(true);\n\t\tlike({\n\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t})\n\t\tunLike({\n\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t})\n\t\tsetLoading(false);\n\t};\n\n\tconst LikeUnLikeButton = (): JSX.Element => {\n\t\tconst likeButton = (\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tlike({\n\t\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{\" \"}\n\t\t\t\tLike{\" \"}\n\t\t\t</button>\n\t\t);\n\n\t\tconst unLikeButton = (\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tunLike({\n\t\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{\" \"}\n\t\t\t\tUnlike{\" \"}\n\t\t\t</button>\n\t\t);\n\t\treturn data?.isLikedByUser ? unLikeButton : likeButton;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t{props.user?.firstName} {props.user?.lastName}{\" \"}\n\t\t\t\t\t<span>{props.date}</span>\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>{props.content}</p>\n\t\t\t</div>\n\t\t\t<div>{props.likes}</div> {LikeUnLikeButton()}\n\t\t\t<div>\n\t\t\t\t{props?.comments?.map((comment: IComment) => {\n\t\t\t\t\t<Comment\n\t\t\t\t\t\tfirstName={comment.firstName}\n\t\t\t\t\t\tlastName={comment.lastName}\n\t\t\t\t\t\tcontent={comment.content}\n\t\t\t\t\t\tdate={comment.date}\n\t\t\t\t\t\tlikes={comment.likes}\n\t\t\t\t\t\tcomments={comment.comments}\n\t\t\t\t\t/>;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}