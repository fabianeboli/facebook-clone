{"ast":null,"code":"var _jsxFileName = \"/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Comment from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { LIKE_POST, ALL_POSTS, UNLIKE_POST, IS_LIKED_BY_USER, FIND_POST_BY_ID } from \"../../../queries/post.query\";\n\nconst Post = props => {\n  var _props$user, _props$user2, _props$comments;\n\n  // !TODO MUTATIONS SHOULDN'T REFETCH ALL POSTS BUT JUST ONE\n  // !TODO BUTTON SHOULD BE DISABLED LIKING OR UNLIKING\n  // !TODO BUTTON SHOULD DYNAMICALLY CHANGE TEXT\n  const [like] = useMutation(LIKE_POST, {\n    refetchQueries: [{\n      query: FIND_POST_BY_ID\n    }]\n  });\n  const [unLike] = useMutation(UNLIKE_POST, {\n    refetchQueries: [{\n      query: ALL_POSTS\n    }]\n  });\n  const {\n    data,\n    loading\n  } = useQuery(IS_LIKED_BY_USER, {\n    variables: {\n      id: props.id,\n      userId: localStorage.getItem(\"id\")\n    },\n    errorPolicy: \"all\",\n    onError: error => {\n      console.log(\"Error: \", error.message);\n    }\n  });\n\n  const LikeUnLikeButton = () => {\n    const likeButton = __jsx(\"button\", {\n      onClick: () => like({\n        variables: {\n          id: props.id,\n          userId: localStorage.getItem(\"id\")\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }\n    }, \" \", \"Like\", \" \");\n\n    const unLikeButton = __jsx(\"button\", {\n      onClick: () => unLike({\n        variables: {\n          id: props.id,\n          userId: localStorage.getItem(\"id\")\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, \" \", \"Unlike\", \" \");\n\n    console.log(data === null || data === void 0 ? void 0 : data.isLikedByUser);\n    return (data === null || data === void 0 ? void 0 : data.isLikedByUser) ? unLikeButton : likeButton;\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, (_props$user = props.user) === null || _props$user === void 0 ? void 0 : _props$user.firstName, \" \", (_props$user2 = props.user) === null || _props$user2 === void 0 ? void 0 : _props$user2.lastName, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, props.date))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, props.content)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, props.likes), \" \", LikeUnLikeButton(), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }, props === null || props === void 0 ? void 0 : (_props$comments = props.comments) === null || _props$comments === void 0 ? void 0 : _props$comments.map(comment => {\n    __jsx(Comment, {\n      firstName: comment.firstName,\n      lastName: comment.lastName,\n      content: comment.content,\n      date: comment.date,\n      likes: comment.likes,\n      comments: comment.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }\n    });\n  })));\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/fabian/programming_Exercises/facebook-clone/frontend/components/Posts/Post/Post.tsx"],"names":["React","Comment","useMutation","useQuery","LIKE_POST","ALL_POSTS","UNLIKE_POST","IS_LIKED_BY_USER","FIND_POST_BY_ID","Post","props","like","refetchQueries","query","unLike","data","loading","variables","id","userId","localStorage","getItem","errorPolicy","onError","error","console","log","message","LikeUnLikeButton","likeButton","unLikeButton","isLikedByUser","user","firstName","lastName","date","content","likes","comments","map","comment"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\nimport Comment, { IComment } from \"../../Comment/Comment\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n\tLIKE_POST,\n\tALL_POSTS,\n\tUNLIKE_POST,\n\tIS_LIKED_BY_USER,\n\tFIND_POST_BY_ID,\n} from \"../../../queries/post.query\";\n\nexport interface IPost {\n\tid: string;\n\tuser?: {\n\t\tfirstName: string;\n\t\tlastName: string;\n\t};\n\tfirstName: string;\n\tlastName: string;\n\tdate: string;\n\tcontent: string;\n\tlikes: number;\n\tcomments: IComment[];\n}\n\nconst Post = (props: IPost): JSX.Element => {\n\t// !TODO MUTATIONS SHOULDN'T REFETCH ALL POSTS BUT JUST ONE\n\t// !TODO BUTTON SHOULD BE DISABLED LIKING OR UNLIKING\n\t// !TODO BUTTON SHOULD DYNAMICALLY CHANGE TEXT\n\tconst [like] = useMutation(LIKE_POST, {\n\t\trefetchQueries: [\n\t\t\t{ query: FIND_POST_BY_ID },\n\t\t\t\n\t\t],\n\t});\n\tconst [unLike] = useMutation(UNLIKE_POST, {\n\t\trefetchQueries: [{ query: ALL_POSTS }],\n\t});\n\n\tconst { data, loading } = useQuery(IS_LIKED_BY_USER, {\n\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\terrorPolicy: \"all\",\n\t\tonError: (error) => {\n\t\t\tconsole.log(\"Error: \", error.message);\n\t\t},\n\t});\n\n\tconst LikeUnLikeButton = (): JSX.Element => {\n\t\tconst likeButton = (\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tlike({\n\t\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{\" \"}\n\t\t\t\tLike{\" \"}\n\t\t\t</button>\n\t\t);\n\n\t\tconst unLikeButton = (\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tunLike({\n\t\t\t\t\t\tvariables: { id: props.id, userId: localStorage.getItem(\"id\") },\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{\" \"}\n\t\t\t\tUnlike{\" \"}\n\t\t\t</button>\n\t\t);\n\t\tconsole.log(data?.isLikedByUser);\n\t\treturn data?.isLikedByUser ? unLikeButton : likeButton;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t{props.user?.firstName} {props.user?.lastName}{\" \"}\n\t\t\t\t\t<span>{props.date}</span>\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>{props.content}</p>\n\t\t\t</div>\n\t\t\t<div>{props.likes}</div> {LikeUnLikeButton()}\n\t\t\t<div>\n\t\t\t\t{props?.comments?.map((comment: IComment) => {\n\t\t\t\t\t<Comment\n\t\t\t\t\t\tfirstName={comment.firstName}\n\t\t\t\t\t\tlastName={comment.lastName}\n\t\t\t\t\t\tcontent={comment.content}\n\t\t\t\t\t\tdate={comment.date}\n\t\t\t\t\t\tlikes={comment.likes}\n\t\t\t\t\t\tcomments={comment.comments}\n\t\t\t\t\t/>;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}